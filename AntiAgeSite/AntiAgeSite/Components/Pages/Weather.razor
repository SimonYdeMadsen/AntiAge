@page "/weather"
@using System.Text.Json
@attribute [StreamRendering]
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (user == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@user.UserId</td>
                <td>@user.Email</td>
                
            </tr>
        </tbody>
    </table>
}

@code {
    private UserDto? user;
    private string api = "...";
    private string userEndpoint = "GetUser";

    protected override async Task OnInitializedAsync()
    {
        // Simulate asynchronous loading to demonstrate streaming rendering
        await Task.Delay(500);

        var response = await Http.GetStringAsync(api+userEndpoint);
        user = JsonSerializer.Deserialize<UserDto>(response);
    }

}
